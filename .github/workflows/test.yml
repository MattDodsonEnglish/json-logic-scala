name: Test Coverage CI
on: [push]
jobs:
  retrieve-scala-versions:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Retrieve Scala Versions from build.sbt file
        id: set-matrix
        run: |
          outputScalaVersion=$(sbt +scalaBinaryVersion)
          echo $outputScalaVersion
          something_to_show=$(echo "[info] 2.12.13  something [info] 2.13.5" | sed -E 's/\[info\] ([0-9]\.[0-9]+)/\1/')
          echo "$something_to_show"
          scala_versions=$(echo "$outputScalaVersion" | sed -E 's/\[info\] ([0-9]\.[0-9]+)/\1/')
          echo scala_versions
          echo "$scala_versions"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  test-coverage:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Run Sbt Test and Generate Report on Multiple Scala Versions
        run: |
          sbt +coverage +test
          sbt +coverageReport
      - uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: ./target/scala-[0-9].[0-9][0-9]

  upload-coverage:
    runs-on: ubuntu-latest
    needs: [retrieve-scala-versions, test-coverage]
    strategy:
      fail-fast: false
      matrix:
        scala_version: ${{ fromJson(needs.retrieve-scala-versions.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: coverage-report
          path: ./target/
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./target/scala-${{ matrix.scala_version }}/
          flags: unittests,${{ matrix.scala_version }}
          name: codecov-json-logic-scala
          fail_ci_if_error: true
          verbose: true